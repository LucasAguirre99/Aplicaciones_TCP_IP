{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Aplicaciones TCP/IP","text":"<p>Estudio de las aplicaciones y protocolos utilizados en la transmisi\u00f3n de informaci\u00f3n en redes TCP/IP. </p>"},{"location":"#contenido","title":"CONTENIDO:","text":""},{"location":"#modulo-puntapie","title":"M\u00f3dulo: Puntapie","text":""},{"location":"#modulo-iot","title":"M\u00f3dulo: IOT","text":""},{"location":"#modulo-proyecto-final","title":"M\u00f3dulo: Proyecto Final","text":""},{"location":"01-Puntapie/Readme/","title":"Aplicaciones TCP/IP","text":""},{"location":"01-Puntapie/Readme/#modulo-puntapie","title":"M\u00f3dulo: Puntapi\u00e9","text":"<ul> <li>Git/GitHub</li> <li>Bash</li> <li>Python</li> <li>Python web</li> <li>Proyecto Integrador Puntapie </li> </ul>"},{"location":"01-Puntapie/01-Git_Github/git_github/","title":"Introducci\u00f3n a Git: Control de versiones y colaboraci\u00f3n","text":"<p>Git es un sistema de control de versiones distribuido ampliamente utilizado en el desarrollo de software. Proporciona una forma eficiente y confiable de gestionar el historial de cambios en tus proyectos.</p> <p>La principal funci\u00f3n de Git es rastrear y registrar los cambios realizados en tus archivos a lo largo del tiempo. Esto te permite tener un control preciso sobre las diferentes versiones de tu proyecto y facilita la colaboraci\u00f3n con otras personas.</p> <p>Algunas de las ventajas de utilizar Git incluyen:</p> <ul> <li> <p>Control de versiones: Git te permite mantener un historial completo de todos los cambios realizados en tu proyecto. Puedes ver qu\u00e9 cambios se hicieron, qui\u00e9n los hizo y cu\u00e1ndo se realizaron. Esto facilita la identificaci\u00f3n y soluci\u00f3n de problemas, as\u00ed como la reversi\u00f3n a versiones anteriores si es necesario.</p> </li> <li> <p>Trabajo en equipo y colaboraci\u00f3n: Git es especialmente \u00fatil cuando trabajas en equipo. Permite que varios desarrolladores trabajen en paralelo en diferentes ramas de desarrollo y fusionen sus cambios de manera controlada. Adem\u00e1s, facilita la resoluci\u00f3n de conflictos cuando varios desarrolladores modifican la misma parte de un archivo.</p> </li> <li> <p>Ramificaci\u00f3n y fusiones: Con Git, puedes crear f\u00e1cilmente ramas para trabajar en nuevas caracter\u00edsticas o experimentar sin afectar la rama principal de desarrollo. Esto te permite mantener un flujo de trabajo organizado y seguro. Luego, puedes fusionar tus cambios en la rama principal una vez que est\u00e9n listos y probados.</p> </li> <li> <p>Recuperaci\u00f3n de errores: Git ofrece herramientas poderosas para deshacer cambios no deseados o revertir a una versi\u00f3n anterior de tu proyecto. Esto te permite corregir errores r\u00e1pidamente y minimizar el impacto en tu trabajo.</p> </li> <li> <p>Distribuci\u00f3n y respaldo: Git es un sistema de control de versiones distribuido, lo que significa que todos los desarrolladores tienen una copia completa del historial del proyecto en sus sistemas locales. Esto permite trabajar sin conexi\u00f3n a Internet y proporciona una capa adicional de seguridad y respaldo.</p> </li> </ul> <p>Git es una herramienta esencial para cualquier desarrollador de software. Aprender a utilizar Git te permitir\u00e1 mantener un flujo de trabajo eficiente, colaborar de manera efectiva y tener un control completo sobre el historial de cambios en tus proyectos.</p> <p>Adem\u00e1s, Git se combina perfectamente con GitHub, una plataforma de alojamiento de c\u00f3digo basada en Git que ofrece caracter\u00edsticas adicionales para facilitar la colaboraci\u00f3n y el trabajo en equipo. Algunas de las caracter\u00edsticas importantes de GitHub incluyen:</p> <ul> <li> <p>Repositorios remotos: GitHub proporciona una plataforma en la nube para alojar tus repositorios Git de forma segura y accesible desde cualquier lugar.</p> </li> <li> <p>Solicitudes de extracci\u00f3n: Permite que los desarrolladores propongan cambios en un repositorio y soliciten que se revisen y fusionen en la rama principal.</p> </li> <li> <p>Issues: Proporciona una forma de realizar un seguimiento de tareas, mejoras o errores en tu proyecto y facilita la colaboraci\u00f3n entre desarrolladores para resolverlos.</p> </li> <li> <p>Acciones: Permite crear flujos de trabajo automatizados para compilar, probar y desplegar tu c\u00f3digo de manera eficiente.</p> </li> </ul> <p>En resumen, Git y GitHub ofrecen herramientas esenciales para el control de versiones, la colaboraci\u00f3n en proyectos de software y el trabajo en equipo. Aprovechar estas herramientas te ayudar\u00e1 a mejorar tu flujo de trabajo, aumentar la productividad y tener un control completo sobre el desarrollo y evoluci\u00f3n de tus proyectos.</p> <p>Si deseas obtener m\u00e1s informaci\u00f3n sobre Git y comenzar a explorar todas sus caracter\u00edsticas y funcionalidades, te recomiendo consultar la documentaci\u00f3n oficial de Git. Para aprender m\u00e1s sobre c\u00f3mo utilizar GitHub, puedes consultar la documentaci\u00f3n oficial de GitHub.</p> <p></p>"},{"location":"01-Puntapie/01-Git_Github/git_github/#conceptos-basicos-de-git","title":"Conceptos B\u00e1sicos de Git","text":"<p>A continuaci\u00f3n se presentan algunos conceptos b\u00e1sicos de Git, junto con enlaces a la documentaci\u00f3n oficial para obtener m\u00e1s informaci\u00f3n:</p> <p>Git Clone: Clona un repositorio existente en tu m\u00e1quina local. Documentaci\u00f3n # Introducci\u00f3n a Git: Control de versiones y colaboraci\u00f3n</p>"},{"location":"01-Puntapie/01-Git_Github/git_github/#crear-una-cuenta-e-iniciar-sesion-con-clave-ssh","title":"Crear una cuenta e iniciar sesi\u00f3n con clave SSH","text":"<ol> <li>Crear una cuenta en una plataforma de alojamiento de repositorios, como GitHub o GitLab.</li> <li>GitHub: https://github.com</li> <li> <p>GitLab: https://gitlab.com</p> </li> <li> <p>Generar una clave SSH en tu m\u00e1quina local.</p> </li> <li> <p>Sigue las instrucciones oficiales para generar una clave SSH seg\u00fan tu sistema operativo:</p> <ul> <li>Generar una clave SSH en Windows</li> <li>Generar una clave SSH en macOS y Linux</li> </ul> </li> <li> <p>Agregar la clave SSH generada a tu cuenta en la plataforma de alojamiento de repositorios.</p> </li> <li> <p>Sigue las instrucciones oficiales para agregar tu clave SSH a tu cuenta:</p> <ul> <li>Agregar una clave SSH a tu cuenta de GitHub</li> <li>Agregar una clave SSH a tu cuenta de GitLab</li> </ul> </li> <li> <p>Configurar Git para usar la clave SSH.</p> </li> <li> <p>Abre una terminal y ejecuta los siguientes comandos, reemplazando <code>tu-correo-electronico</code> con tu direcci\u00f3n de correo electr\u00f3nico asociada a la cuenta de la plataforma de alojamiento de repositorios:</p> <pre><code>git config --global user.email \"tu-correo-electronico\"\ngit config --global user.name \"Tu Nombre\"\n</code></pre> </li> <li> <p>Verificar la configuraci\u00f3n correcta de la clave SSH.</p> </li> <li> <p>Ejecuta el siguiente comando en la terminal:</p> <pre><code>ssh -T git@github.com\n</code></pre> <p>Aseg\u00farate de recibir un mensaje de autenticaci\u00f3n exitosa.</p> </li> <li> <p>\u00a1Listo! Ahora puedes iniciar sesi\u00f3n en la plataforma de alojamiento de repositorios utilizando la clave SSH.</p> </li> </ol>"},{"location":"01-Puntapie/01-Git_Github/git_github/#conceptos-basicos-de-git_1","title":"Conceptos B\u00e1sicos de Git","text":"<p>A continuaci\u00f3n se presentan algunos conceptos b\u00e1sicos de Git, junto con enlaces a la documentaci\u00f3n oficial para obtener m\u00e1s informaci\u00f3n:</p> <ul> <li>Git Clone: Clona un repositorio existente en tu m\u00e1quina local. Documentaci\u00f3n</li> <li>Git Init: Crea un nuevo repositorio vac\u00edo en tu m\u00e1quina local. Documentaci\u00f3n</li> <li>Git Fork: Crea una copia de un repositorio en tu cuenta en la plataforma de alojamiento de repositorios. Documentaci\u00f3n de GitHub | Documentaci\u00f3n de GitLab</li> <li>Git Add: Agrega archivos o cambios al \u00e1rea de preparaci\u00f3n (staging area) para ser incluidos en el siguiente commit. Documentaci\u00f3n</li> <li>Git Commit: Guarda los cambios realizados en el repositorio como una nueva versi\u00f3n. Documentaci\u00f3n</li> <li>Git Branch: Crea, lista o elimina ramas en el repositorio. Documentaci\u00f3n</li> <li>Git Checkout: Cambia la rama o el commit actual en el repositorio. Documentaci\u00f3n</li> <li>Git Reset: Deshace los cambios realizados en el repositorio a un estado anterior. Documentaci\u00f3n</li> </ul>"},{"location":"01-Puntapie/01-Git_Github/git_github/#actividades","title":"Actividades","text":"<ul> <li>En el repositorio forkeado carga como issues cada una de las actividades.</li> <li>Agregue un colaborador al resositorio para asignarle la revision.</li> </ul>"},{"location":"01-Puntapie/01-Git_Github/git_github/#actividad-creacion-de-perfil-en-github","title":"Actividad: Creaci\u00f3n de perfil en GitHub","text":"<p>La creaci\u00f3n de un perfil en GitHub te permite mostrar tus proyectos y habilidades de manera atractiva y profesional. Referencia:  setting up your profile in github</p>"},{"location":"01-Puntapie/01-Git_Github/git_github/#resumen","title":"Resumen","text":"<p>La actividad consiste en crear un perfil en GitHub y personalizarlo utilizando un generador de README en l\u00ednea. Esto te permitir\u00e1 agregar una descripci\u00f3n personalizada, mostrar tus proyectos y resaltar tus contribuciones.</p>"},{"location":"01-Puntapie/01-Git_Github/git_github/#pasos-a-seguir","title":"Pasos a seguir","text":"<ul> <li> <p>Crea un nuevo repositorio en GitHub: Inicia sesi\u00f3n en tu cuenta de GitHub y crea un repositorio con el mismo nombre que tu usuario. Aseg\u00farate de configurarlo como p\u00fablico.</p> </li> <li> <p>Inicializa el repositorio con un archivo README.md: Durante la creaci\u00f3n del repositorio, selecciona la opci\u00f3n \"Initialize this repository with a README\" para crear autom\u00e1ticamente un archivo README.md.</p> </li> <li> <p>Edita el archivo README.md: Abre el archivo README.md en tu repositorio y agrega una descripci\u00f3n personalizada y cualquier otra informaci\u00f3n que desees mostrar en tu perfil. Guarda los cambios.</p> </li> <li> <p>Utiliza generadores de README en l\u00ednea: Visita uno de los siguientes enlaces: </p> </li> <li>GitHub Profile ReadMe Generator</li> <li>readme.so</li> <li>GPRM : GitHub Profile ReadMe Maker</li> <li> <p>Github Profilinator</p> </li> <li> <p>Genera el contenido deseado: Utiliza la herramienta seleccionada para generar el contenido de tu archivo README. Personaliza el dise\u00f1o, agrega secciones espec\u00edficas y muestra tus habilidades y proyectos de manera atractiva.</p> </li> <li> <p>Copia y adapta el c\u00f3digo generado: Copia el c\u00f3digo generado por la herramienta y p\u00e9galo en tu archivo README.md en GitHuby adaptalo a tu necesidad. Esto mejorar\u00e1 la apariencia de tu perfil y resaltar\u00e1 tu trabajo y contribuciones.</p> </li> </ul>"},{"location":"01-Puntapie/01-Git_Github/git_github/#actividad-completa-y-muestra-la-encuesta-de-habilidades","title":"Actividad: Completa y Muestra la Encuesta de Habilidades","text":""},{"location":"01-Puntapie/01-Git_Github/git_github/#descripcion","title":"Descripci\u00f3n:","text":"<p>Como Project Manager, te pido que completes la encuesta de habilidades en nombre de tu equipo de colaboradores. Es importante recopilar esta informaci\u00f3n para comprender las habilidades y conocimientos existentes en el equipo y poder asignar tareas de manera efectiva.</p>"},{"location":"01-Puntapie/01-Git_Github/git_github/#pasos-a-seguir_1","title":"Pasos a seguir:","text":"<ul> <li>Accede al repositorio forkeado del proyecto.</li> <li>Crea una carpeta con el nombre de usuario de GitHub</li> <li>Dentro de la carpeta, crea un archivo llamado \"encuesta.md\".</li> <li>Copia el siguiente template y responde la encuesta.</li> </ul>"},{"location":"01-Puntapie/01-Git_Github/git_github/#encuesta-de-herramientas-git-github-bash-y-python","title":"Encuesta de Herramientas - Git, GitHub, Bash y Python","text":"<pre><code># Encuesta de habilidades\n\nNivel de conocimiento y habilidades en el uso de las siguientes herramientas, utilizando una escala del 1 al 5, donde:\n\n1 = No tengo conocimiento\n2 = Conocimiento b\u00e1sico\n3 = Conocimiento intermedio\n4 = Conocimiento avanzado\n5 = Experto\n\n**Nombre de usuario de GitHub**: [Nombre de usuario de GitHub del colaborador]\n**Link profile usuario de GitHub**: [link al profile del usuario]\n**Python**: [Valoraci\u00f3n del 0 al 5]\n**Bash**: [Valoraci\u00f3n del 0 al 5]\n**Git/GitHub**: [Valoraci\u00f3n del 0 al 5]\n</code></pre> <ul> <li>Realiza un commit en el repositorio forkeado con el mensaje \"encuesta completa\".</li> <li>Crea un pull request para enviar tus cambios al repositorio original.</li> </ul>"},{"location":"01-Puntapie/01-Git_Github/git_github/#resultado-esperado","title":"Resultado esperado:","text":"<ul> <li>Encuesta contestada por cada usuario en el repositorio original </li> </ul>"},{"location":"01-Puntapie/02-Bash/bash/","title":"Introducci\u00f3n a Bash: Automatizaci\u00f3n","text":"<p>Herramienta fundamental, Bash (Bourne Again SHell), es un lenguaje de scripting y un int\u00e9rprete de comandos ampliamente utilizado en sistemas Unix-like, como Linux y macOS.</p> <p>Para aprovechar al m\u00e1ximo nuestro tiempo y recursos, Bash les brinda la capacidad de automatizar tareas repetitivas y mon\u00f3tonas. Ya sea procesar grandes vol\u00famenes de datos, realizar an\u00e1lisis complejos o administrar sistemas, Bash puede ser un aliado confiable.</p> <p>La automatizaci\u00f3n de tareas en Bash permitir\u00e1:</p> <ol> <li>Procesamiento eficiente de datos: Con Bash, podr\u00e1n manipular y transformar f\u00e1cilmente conjuntos de datos utilizando comandos y expresiones regulares. Podr\u00e1n filtrar, combinar y procesar grandes cantidades de informaci\u00f3n en segundos, lo que les permitir\u00e1 realizar an\u00e1lisis m\u00e1s profundos y obtener resultados precisos.</li> <li>Administraci\u00f3n de sistemas: Bash les proporciona las herramientas necesarias para administrar sistemas de manera eficiente. Podr\u00e1n escribir scripts para configurar y mantener servidores, monitorear recursos del sistema, realizar copias de seguridad y automatizar tareas de mantenimiento. Esto les permitir\u00e1 ahorrar tiempo y minimizar errores en la gesti\u00f3n de infraestructuras tecnol\u00f3gicas.</li> <li>Desarrollo de software: Bash es un lenguaje de scripting poderoso que les permitir\u00e1 automatizar flujos de trabajo en el desarrollo de software. Podr\u00e1n escribir scripts para compilar, probar y desplegar aplicaciones, lo que agilizar\u00e1 el ciclo de desarrollo y optimizar\u00e1 la calidad del software.</li> </ol> <p>Para obtener m\u00e1s informaci\u00f3n sobre Bash y comenzar a explorar todas sus caracter\u00edsticas y funcionalidades, les recomiendo consultar la documentaci\u00f3n oficial de Bash en el siguiente enlace: Documentaci\u00f3n de Bash.</p>"},{"location":"01-Puntapie/02-Bash/bash/#actividades","title":"Actividades:","text":"<p>Para realizar las actividades requeridas, sigue la siguiente secuencia:</p> <ol> <li>Realizar un Fork del Repositorio:</li> <li>Crear un Issue con la Actividad Correspondiente:</li> <li>Realizar la Actividad y Completarla:</li> <li>Pase a revisi\u00f3n la actividad completa a colaborador</li> <li>Solicitar un Pull Request al Repositorio Principal:</li> </ol>"},{"location":"01-Puntapie/02-Bash/bash/#actividad-1-obtener-informacion-del-sistema-en-formato-json-utilizando-un-script-bash","title":"Actividad 1: Obtener informaci\u00f3n del sistema en formato JSON utilizando un script Bash","text":""},{"location":"01-Puntapie/02-Bash/bash/#historia-de-usuario","title":"Historia de usuario:","text":"<p>Como usuario de Ubuntu, quiero ejecutar un script Bash que me permita obtener informaci\u00f3n del sistema en formato JSON. Esto me brindar\u00e1 una forma conveniente de recopilar los detalles del sistema, como el sistema operativo, el kernel, la CPU, la memoria total, el espacio en disco, la versi\u00f3n de Bash y la versi\u00f3n de Python.</p>"},{"location":"01-Puntapie/02-Bash/bash/#criterios-de-aceptacion","title":"Criterios de aceptaci\u00f3n:","text":"<ul> <li>Como usuario de Ubuntu, quiero poder ejecutar el script Bash desde la l\u00ednea de comandos en mi sistema.</li> <li>El script debe recopilar autom\u00e1ticamente la informaci\u00f3n del sistema requerida,    siguientes claves y valores (estos son de ejemplo):<ul> <li>\"sistema_operativo\": \"Ubuntu 20.04\"</li> <li>\"kernel\": \"5.4.0-86-generic\"</li> <li>\"cpu\": \"Intel Core i7-8700K\"</li> <li>\"memoria_total\": \"16 GB\"</li> <li>\"espacio_disco\": \"500 GB\"</li> <li>\"version_bash\": \"5.0.17\"</li> <li>\"version_python\": \"3.8.10\" (por ejemplo, si la versi\u00f3n de Python instalada es 3.8.10)</li> </ul> </li> <li>El script debe imprimir el objeto JSON resultante en la salida est\u00e1ndar.</li> <li>El script debe guardar la salida como objeto JSON, con el nombre de archivo sistem_info.json</li> </ul>"},{"location":"01-Puntapie/02-Bash/bash/#definicion-de-terminado","title":"Definici\u00f3n de terminado:","text":"<ul> <li>Se ha creado un script Bash llamado \"system_info.sh\" que cumple con los criterios de aceptaci\u00f3n.</li> <li>El script ha sido probado con \u00e9xito en Ubuntu y produce un objeto JSON con la informaci\u00f3n del sistema requerida.</li> <li>El objeto JSON impreso en la salida est\u00e1ndar coincide con las claves y valores especificados anteriormente.</li> <li>Se ha documentado claramente c\u00f3mo ejecutar y probar el script en el repositorio designado, incluyendo cualquier dependencia o configuraci\u00f3n adicional que pueda ser necesaria.</li> <li>versionado en github en el repositorio original</li> </ul>"},{"location":"01-Puntapie/02-Bash/bash/#resultado-esperado","title":"Resultado esperado:","text":"<ul> <li>script en el repositorio original</li> <li>archivo con la informacion del sistema del usuario sistem_info.json en el repositorio original</li> </ul>"},{"location":"01-Puntapie/02-Bash/bash/#actividad-2-verificacion-del-estado-de-sitios-web","title":"Actividad 2: Verificaci\u00f3n del Estado de Sitios Web","text":""},{"location":"01-Puntapie/02-Bash/bash/#historia-de-usuario_1","title":"Historia de usuario:","text":"<p>Como usuario, quiero tener un script de Bash que me permita verificar el estado de un sitio web individual o realizar una verificaci\u00f3n en masa de varios sitios web.</p>"},{"location":"01-Puntapie/02-Bash/bash/#criterios-de-aceptacion_1","title":"Criterios de Aceptaci\u00f3n","text":"<ol> <li>Puedo ejecutar el script de Bash con una URL espec\u00edfica y obtener el c\u00f3digo de estado del sitio web.</li> <li>Si no proporciono una URL espec\u00edfica, el script utilizar\u00e1 una URL por defecto.</li> <li>Puedo ejecutar el script con la opci\u00f3n <code>-f</code> seguida de un archivo v\u00e1lido que contenga una lista de sitios web.</li> <li>Cuando ejecuto el script con la opci\u00f3n <code>-f</code> y un archivo v\u00e1lido, el script muestra el c\u00f3digo de estado de cada sitio web en la lista.</li> <li>El script muestra \"UP!\" si el c\u00f3digo de estado es 200, y \"DOWN\" si es diferente de 200.</li> </ol>"},{"location":"01-Puntapie/02-Bash/bash/#definicion-de-terminado_1","title":"Definici\u00f3n de Terminado","text":"<p>El script de Bash cumple con los siguientes criterios:</p> <ol> <li>Puede verificar el estado de un sitio web espec\u00edfico.</li> <li>Puede utilizar una URL por defecto si no se proporciona una espec\u00edfica.</li> <li>Puede realizar una verificaci\u00f3n en masa utilizando la opci\u00f3n <code>-f</code> seguida de un archivo v\u00e1lido que contenga una lista de sitios web.</li> <li>Muestra el c\u00f3digo de estado de cada sitio web en la lista.</li> <li>Muestra \"UP!\" si el c\u00f3digo de estado es 200, y \"DOWN\" si es diferente de 200.</li> <li>Versionado en github en el repositorio original</li> </ol>"},{"location":"01-Puntapie/02-Bash/bash/#resultado-esperado_1","title":"Resultado esperado:","text":"<ul> <li>script en el repositorio original</li> </ul>"},{"location":"01-Puntapie/02-Bash/bash/#tareas","title":"Tareas","text":"<p>Las tareas involucradas en el desarrollo de esta historia de usuario podr\u00edan ser:</p> <ol> <li>Crear un script de Bash.</li> <li>Implementar la l\u00f3gica para verificar el estado de un sitio web espec\u00edfico.</li> <li>Implementar la l\u00f3gica para utilizar una URL por defecto si no se proporciona una espec\u00edfica.</li> <li>Implementar la l\u00f3gica para leer un archivo v\u00e1lido que contiene una lista de sitios web.</li> <li>Implementar la l\u00f3gica para iterar sobre los sitios web en el archivo y mostrar el c\u00f3digo de estado de cada uno.</li> <li>Implementar la l\u00f3gica para mostrar \"UP!\" si el c\u00f3digo de estado es 200, y \"DOWN\" si es diferente de 200.</li> <li>Probar el script con casos de prueba para asegurar su correcto funcionamiento.</li> <li>Realizar pruebas adicionales y solucionar cualquier problema identificado.</li> <li>Documentar el script y proporcionar instrucciones de uso.</li> </ol>"},{"location":"01-Puntapie/02-Bash/bash/#output-posible","title":"Output posible","text":"<pre><code>2024-03-10 08:30:00 - https://www.example1.com - 200 - UP!\n2024-03-10 08:30:00 - https://www.example2.com - 404 - DOWN\n2024-03-10 08:30:00 - https://www.example3.com - 200 - UP!\n</code></pre>"},{"location":"01-Puntapie/03-Python/python/","title":"Introducci\u00f3n a Python: Automatizaci\u00f3n y scripting","text":"<p>Python es un lenguaje de programaci\u00f3n vers\u00e1til y poderoso que se ha convertido en una herramienta fundamental en el campo de la automatizaci\u00f3n y scripting. Con su sintaxis clara y legible, Python facilita la creaci\u00f3n de scripts y programas que pueden realizar tareas repetitivas o complejas de manera m\u00e1s eficiente.</p> <p>La automatizaci\u00f3n se refiere a la capacidad de automatizar procesos y tareas mediante la escritura de c\u00f3digo. Python ofrece una amplia gama de bibliotecas y m\u00f3dulos que permiten interactuar con el sistema operativo, manipular archivos, realizar solicitudes web, enviar correos electr\u00f3nicos y mucho m\u00e1s. Esto hace que Python sea ideal para automatizar tareas rutinarias, como procesar archivos en lotes, realizar copias de seguridad programadas o extraer informaci\u00f3n de p\u00e1ginas web.</p> <p>El scripting se refiere a la capacidad de escribir scripts, que son programas peque\u00f1os y espec\u00edficos dise\u00f1ados para realizar una tarea determinada. Python es un lenguaje de scripting muy popular debido a su facilidad de uso y a su amplia gama de bibliotecas y m\u00f3dulos disponibles. Los scripts de Python se utilizan para una variedad de prop\u00f3sitos, como procesamiento de datos, generaci\u00f3n de informes, administraci\u00f3n de sistemas y mucho m\u00e1s.</p> <p>Algunas de las ventajas de utilizar Python para la automatizaci\u00f3n y scripting son:</p> <ul> <li>Sintaxis legible: Python tiene una sintaxis clara y f\u00e1cil de entender, lo que facilita la escritura y el mantenimiento del c\u00f3digo.</li> <li>Amplia biblioteca est\u00e1ndar: Python cuenta con una amplia biblioteca est\u00e1ndar que proporciona m\u00f3dulos y funciones para realizar una variedad de tareas, lo que acelera el desarrollo de scripts.</li> <li>Compatibilidad multiplataforma: Python se puede ejecutar en diferentes sistemas operativos, lo que permite que los scripts sean portables y funcionen en diferentes entornos.</li> <li>Integraci\u00f3n con otros lenguajes: Python se puede combinar f\u00e1cilmente con otros lenguajes de programaci\u00f3n, lo que permite aprovechar el c\u00f3digo existente y utilizar las fortalezas de cada lenguaje.</li> </ul> <p>Puedes encontrar la documentaci\u00f3n oficial de Python en el siguiente enlace: Documentaci\u00f3n oficial de Python</p>"},{"location":"01-Puntapie/03-Python/python/#actividades","title":"ACTIVIDADES","text":""},{"location":"01-Puntapie/03-Python/python/#actividad-1","title":"Actividad 1","text":"<pre><code># Historia de usuario: Generador de estructuras de archivos a partir de un archivo Markdown\n\nComo desarrollador, necesito automatizar la creaci\u00f3n de una estructura de archivos y directorios para un proyecto basado en un archivo Markdown que define la estructura deseada. Quiero un script en Python que pueda leer el archivo Markdown, interpretar los encabezados y generar autom\u00e1ticamente los directorios y archivos correspondientes.\n\n## Criterios de aceptaci\u00f3n:\n\n- Como usuario, quiero poder proporcionar un archivo Markdown que define la estructura deseada.\n- Como usuario, quiero que el script genere los directorios y archivos correspondientes seg\u00fan la estructura definida en el archivo Markdown.\n- Como usuario, quiero que el script cree una carpeta principal con el nombre del curso.\n- Como usuario, quiero que el script cree carpetas para cada m\u00f3dulo dentro de la carpeta principal.\n- Como usuario, quiero que el script cree carpetas para cada tema dentro de cada m\u00f3dulo.\n- Como usuario, quiero que el script copie archivos de templates disponibles en cada tema.\n- Como usuario, quiero que el script cree una carpeta \"assets\" dentro de cada tema.\n\n## Requisitos t\u00e9cnicos:\n\n- Implementar el script en Python.\n- Utilizar el m\u00f3dulo `markdown` de Python para leer y procesar el archivo Markdown.\n- Utilizar el m\u00f3dulo `os` de Python para crear directorios y archivos.\n- Validar la estructura del archivo Markdown para asegurarse de que est\u00e1 en el formato esperado antes de generar los directorios y archivos.\n</code></pre> <p>Entrada: Archivo markdown de referencia</p> <p><pre><code># Curso de Programaci\u00f3n Avanzada\n\n## M\u00f3dulo 1 - Introducci\u00f3n\n- Tema 1 - Conceptos fundamentales\n- Tema 2 - Estructuras de datos\n\n## M\u00f3dulo 2 - Programaci\u00f3n Orientada a Objetos\n- Tema 1 - Clases y objetos\n- Tema 2 - Herencia y polimorfismo\n</code></pre> Salida: Estructura de archivos de  referencia</p> <pre><code>Curso de Programaci\u00f3n Avanzada/\n\u251c\u2500\u2500 M\u00f3dulo 1 - Introducci\u00f3n/\n\u2502   \u251c\u2500\u2500 Tema 1 - Conceptos fundamentales/\n\u2502   \u2502   \u2514\u2500\u2500 nombredeltema.md\n\u2502   \u2502   \u2514\u2500\u2500 assets/\n\u2502   \u2514\u2500\u2500 Tema 2 - Estructuras de datos/\n\u2502       \u2514\u2500\u2500 nombredeltema.md\n\u2502       \u2514\u2500\u2500 assets/\n\u2514\u2500\u2500 M\u00f3dulo 2 - Programaci\u00f3n Orientada a Objetos/\n    \u251c\u2500\u2500 Tema 1 - Clases y objetos/\n    \u2502   \u2514\u2500\u2500 nombredeltema.md\n    \u2502   \u2514\u2500\u2500 assets/\n    \u2514\u2500\u2500 Tema 2 - Herencia y polimorfismo/\n        \u2514\u2500\u2500 nombredeltema.md\n        \u2514\u2500\u2500 assets/\n</code></pre> <p>Template de referencia para los temas</p> <pre><code># T\u00edtulo del Tema\n\n## Resumen\n\nAqu\u00ed puedes proporcionar un resumen breve del tema.\n\n## Introducci\u00f3n\n\nAqu\u00ed puedes introducir el tema y proporcionar contexto o informaci\u00f3n relevante.\n\n## Desarrollo\n\nAqu\u00ed puedes desarrollar el contenido del tema en detalle.\n\n## Cierre\n\nAqu\u00ed puedes hacer un resumen o conclusi\u00f3n del tema.\n\n## Actividad\n</code></pre>"},{"location":"01-Puntapie/04-Python-web-apps/python_web/","title":"Prototipado de aplicaciones web con Python","text":"<p>El prototipado de aplicaciones web con Python es el proceso de crear versiones preliminares y funcionales de una aplicaci\u00f3n web utilizando el lenguaje de programaci\u00f3n Python. Consiste en desarrollar r\u00e1pidamente una representaci\u00f3n visual y funcional de la aplicaci\u00f3n para validar conceptos, probar ideas y recopilar comentarios antes de realizar una implementaci\u00f3n completa.</p> <p>El prototipado es una etapa crucial en el desarrollo de aplicaciones web, ya que permite a los desarrolladores y dise\u00f1adores experimentar con diferentes enfoques y funcionalidades, y capturar los requisitos y expectativas de los usuarios de manera temprana. Proporciona una visi\u00f3n temprana del aspecto y la interacci\u00f3n de la aplicaci\u00f3n, lo que facilita la comunicaci\u00f3n y colaboraci\u00f3n entre los miembros del equipo.</p> <p>Existen diferentes herramientas para el prototipado de aplicaciones web con Python, dos de las cuales son Reflex y Streamlit.</p>"},{"location":"01-Puntapie/04-Python-web-apps/python_web/#reflex","title":"Reflex","text":"<p>web: https://reflex.dev/</p> <p></p> <p>Reflex es una herramienta para construir aplicaciones web en Python de forma r\u00e1pida y sencilla. Permite desarrollar aplicaciones completas utilizando solo Python, eliminando la necesidad de cambiar entre diferentes lenguajes y frameworks. Reflex utiliza una estructura basada en clases donde el estado de la aplicaci\u00f3n se representa como una clase y las actualizaciones del estado se realizan mediante m\u00e9todos en la clase. La interfaz de usuario se refleja directamente desde el estado de la aplicaci\u00f3n.</p> <p>Reflex ofrece una amplia biblioteca de m\u00e1s de 60 componentes de interfaz de usuario preconstruidos, que van desde botones simples hasta gr\u00e1ficos y tablas complejas. Estos componentes son completamente personalizables, lo que permite adaptar los colores, fuentes y estilos para que coincidan con el proyecto. Tambi\u00e9n es posible crear componentes personalizados envolviendo componentes de React existentes.</p> <p>Adem\u00e1s, Reflex proporciona un backend potente integrado con FastAPI y SQLAlchemy, lo que permite un desarrollo m\u00e1s r\u00e1pido al evitar la escritura manual de puntos de API. Tambi\u00e9n incluye un ORM de base de datos incorporado que facilita la integraci\u00f3n con bases de datos existentes o el uso de la base de datos SQLite incorporada.</p> <p>Para el despliegue de aplicaciones, Reflex simplifica el proceso al permitir el despliegue con un solo comando. Proporciona una configuraci\u00f3n autom\u00e1tica de CDN, HTTPS, SSL y otros aspectos de rendimiento y seguridad.</p> <p>Reflex cuenta con una comunidad de desarrolladores en crecimiento, con miles de proyectos creados cada mes, una gran cantidad de estrellas en GitHub y miembros en Discord.</p>"},{"location":"01-Puntapie/04-Python-web-apps/python_web/#streamlit","title":"Streamlit","text":"<p>web: https://streamlit.io/</p> <p></p> <p>Streamlit es una herramienta que permite convertir scripts de datos en aplicaciones web compartibles de forma r\u00e1pida y sencilla. Con Streamlit, es posible construir aplicaciones web interactivas y visualmente atractivas utilizando solo Python, sin necesidad de experiencia previa en desarrollo front-end.</p> <p>Streamlit se basa en tres principios fundamentales: el enfoque en el scripting, la incorporaci\u00f3n de interacci\u00f3n y el despliegue instant\u00e1neo. Con su API simple, es posible desarrollar una aplicaci\u00f3n web en solo unas pocas l\u00edneas de c\u00f3digo. Los widgets de interacci\u00f3n se agregan como variables declarativas, sin la necesidad de escribir c\u00f3digo de backend o conectarse a una interfaz de usuario.</p> <p>Una vez que se desarrolla la aplicaci\u00f3n en Streamlit, es posible compartirla, administrarla y desplegarla directamente desde la plataforma. Streamlit es compatible con una amplia gama de casos de uso y ha sido adoptado por muchas empresas.</p> <p>Streamlit tambi\u00e9n cuenta con una comunidad activa de usuarios, con recursos como documentaci\u00f3n, foros y bibliotecas adicionales desarrolladas por la comunidad.</p> <p>Tanto  Reflex como Streamlit son herramientas poderosas para el prototipado de aplicaciones web con Python. Reflex permite el desarrollo completo de aplicaciones web utilizando solo Python, con una amplia gama de componentes de interfaz de usuario preconstruidos y una integraci\u00f3n simplificada del backend. Por otro lado, Streamlit se centra en convertir scripts de datos en aplicaciones web interactivas, con una API simple y un proceso de despliegue instant\u00e1neo. Ambas herramientas ofrecen una forma r\u00e1pida y efectiva de crear prototipos de aplicaciones web utilizando Python.</p>"},{"location":"01-Puntapie/04-Python-web-apps/python_web/#actividades","title":"Actividades","text":""},{"location":"01-Puntapie/04-Python-web-apps/python_web/#historia-de-usuario-1-investigacion-y-prototipado-con-reflex","title":"Historia de usuario 1: Investigaci\u00f3n y prototipado con Reflex","text":"<p>Como estudiante, quiero aprender sobre el framework Reflex y crear un prototipo de una aplicaci\u00f3n web utilizando este framework, para familiarizarme con su funcionamiento y capacidades. Adem\u00e1s, quiero asegurarme de que el proyecto est\u00e9 configurado con un entorno virtual y tenga un README que explique c\u00f3mo ponerlo en marcha, y que el prototipo est\u00e9 dockerizado para facilitar su despliegue.</p>"},{"location":"01-Puntapie/04-Python-web-apps/python_web/#tareas","title":"Tareas:","text":"<ul> <li>Investigar y estudiar la documentaci\u00f3n de Reflex para comprender su estructura y caracter\u00edsticas.</li> <li>En una carpeta con el nombre de usuario de github cree la estructura de su proyecto.</li> <li>Configurar un entorno virtual en el repositorio para aislar las dependencias del proyecto.</li> <li>Crear un archivo README que proporcione instrucciones claras sobre c\u00f3mo instalar y ejecutar el prototipo de la aplicaci\u00f3n utilizando Reflex.</li> <li>Desarrollar un ejemplo b\u00e1sico de una aplicaci\u00f3n web utilizando Reflex, aprovechando los componentes preconstruidos y personalizables.</li> <li>Dockerizar el prototipo de la aplicaci\u00f3n para facilitar su despliegue y asegurarse de que todas las dependencias est\u00e9n correctamente configuradas.</li> <li>Actualizar el README con instrucciones detalladas sobre c\u00f3mo ejecutar el prototipo de la aplicaci\u00f3n dockerizado.</li> </ul>"},{"location":"01-Puntapie/04-Python-web-apps/python_web/#historia-de-usuario-2-investigacion-y-prototipado-con-streamlit","title":"Historia de usuario 2: Investigaci\u00f3n y prototipado con Streamlit","text":"<p>Como estudiante, deseo explorar el framework Streamlit y crear un prototipo de una aplicaci\u00f3n web utilizando este framework para comprender su funcionalidad y capacidad de desarrollo r\u00e1pido. Adem\u00e1s, quiero asegurarme de que el proyecto est\u00e9 configurado con un entorno virtual y tenga un README que explique c\u00f3mo ponerlo en marcha, y que el prototipo est\u00e9 dockerizado para facilitar su despliegue.</p>"},{"location":"01-Puntapie/04-Python-web-apps/python_web/#tareas_1","title":"Tareas:","text":"<ul> <li>Investigar y estudiar la documentaci\u00f3n de Streamlit para comprender su enfoque en el scripting y las capacidades de desarrollo r\u00e1pido.</li> <li>En una carpeta con el nombre de usuario de github cree la estructura de su proyecto.</li> <li>Configurar un entorno virtual en el repositorio para aislar las dependencias del proyecto.</li> <li>Crear un archivo README que proporcione instrucciones claras sobre c\u00f3mo instalar y ejecutar el prototipo de la aplicaci\u00f3n utilizando Streamlit.</li> <li>Desarrollar un ejemplo b\u00e1sico de una aplicaci\u00f3n web utilizando Streamlit, utilizando las capacidades de scripting y los widgets de interacci\u00f3n.</li> <li>Dockerizar el prototipo de la aplicaci\u00f3n para facilitar su despliegue y asegurarse de que todas las dependencias est\u00e9n correctamente configuradas.</li> <li>Actualizar el README con instrucciones detalladas sobre c\u00f3mo ejecutar el prototipo de la aplicaci\u00f3n dockerizado.</li> </ul>"},{"location":"01-Puntapie/05-Actividad-Integradora-Puntapie/Actividad-Integradora-Puntapie/","title":"Actividad Integradora Puntapie","text":""},{"location":"01-Puntapie/05-Actividad-Integradora-Puntapie/Actividad-Integradora-Puntapie/#actividad-proyecto-integrador-puntapie","title":"Actividad: Proyecto Integrador Puntapie","text":"<ul> <li> <p>Crear un repositorio en una cuenta propia de control de versiones GitHub.</p> </li> <li> <p>Estructurar el repositorio referencia </p> </li> <li> <p>Crear y adecuar el archivo README del repositorio, incluyendo informaci\u00f3n relevante sobre el proyecto, instrucciones de instalaci\u00f3n y uso, as\u00ed como cualquier otra informaci\u00f3n necesaria para entender y colaborar en el proyecto. referencia, referencia workflow git</p> </li> <li> <p>Desplegar el sistema de generaci\u00f3n de documentaci\u00f3n mkdocs con el tema \"Material\" para documentar el proyecto. referencia</p> </li> <li> <p>Configurar GitHub Actions.para Automatizar el proceso de construcci\u00f3ny despliegue de mkdocs en Github Page, para que se actualice autom\u00e1ticamente cada vez que se realicen cambios en la rama principal del repositorio. referencia</p> </li> <li> <p>Desplegar un ejemplo de aplicaci\u00f3n utilizando stremlit o reflex. La aplicaci\u00f3n debe ser capaz de ejecutarse en un entorno local utilizando un entorno virtual adecuado. referencia python app</p> </li> <li> <p>Configurar la aplicaci\u00f3n para que tambi\u00e9n pueda ejecutarse en un contenedor Docker. Proporcionar las instrucciones necesarias para construir y ejecutar la aplicaci\u00f3n en Docker.  referencia docker python streamlit app, [referencia docker python app] https://www.docker.com/blog/how-to-dockerize-your-python-applications/</p> </li> <li> <p>Dejar en proyectos.md, usuario de github, el link del repo y el link de acceso a githubpage</p> </li> </ul>"},{"location":"01-Puntapie/05-Actividad-Integradora-Puntapie/Actividad-Integradora-Puntapie/#ejemplo-proyectosmd","title":"Ejemplo proyectos.md:","text":"<pre><code># proyectos integradoroes Puntapie\n\n## usuario_github\n- link repo\n- link githubpage\n</code></pre>"},{"location":"01-Puntapie/05-Actividad-Integradora-Puntapie/proyectos/","title":"proyectos integradoroes Puntapie","text":""},{"location":"02-IOT/Readme/","title":"Aplicaciones TCP/IP","text":""},{"location":"02-IOT/Readme/#modulo-iot","title":"M\u00f3dulo: IOT","text":"<ul> <li>01-IOT_fundamentals</li> <li>02-IOT_mqtt</li> <li>03-nodered</li> <li>04-Actividad_IOT</li> </ul>"},{"location":"02-IOT/01-IOT_fundamentals/iot_fundamentals/","title":"IOT Fundamentos","text":""},{"location":"02-IOT/01-IOT_fundamentals/iot_fundamentals/#resumen","title":"Resumen","text":"<p>La Internet de las cosas es un tema emergente de importancia t\u00e9cnica, social y econ\u00f3mica. Y es uno de los pilares de \"Internet del Futuro\". Se habla de \u201cInternet del Futuro\u201d como el intento por progresar hacia un marco tecnol\u00f3gico mejor, as\u00ed como hacia nuevos principios arquitect\u00f3nicos. Dentro de este nuevo marco se han identificado cuatro pilares principales:</p> <ul> <li>Internet de las Personas</li> <li>Internet de los Contenidos y el Conocimiento</li> <li>Internet de los Servicios</li> <li>Internet de las Cosas</li> </ul> <p></p> <p>En este momento se est\u00e1n combinando productos de consumo, bienes duraderos, autom\u00f3viles y camiones, componentes industriales y de servicios p\u00fablicos, sensores y otros objetos de uso cotidiano con conectividad a Internet y potentes capacidades de an\u00e1lisis de datos que prometen transformar el modo en que trabajamos, vivimos y jugamos.</p> <p>Las proyecciones del impacto de la IoT sobre Internet y la econom\u00eda son impresionantes: hay quienes anticipan que en el a\u00f1o 2025 habr\u00e1 hasta cien mil millones de dispositivos conectados a la IoT y que su impacto ser\u00e1 de US$11.000.000.000.000.</p> <p>Sin embargo, la Internet de las Cosas tambi\u00e9n plantea importantes desaf\u00edos que podr\u00edan dificultar la realizaci\u00f3n de sus potenciales beneficios. Por esto son importantes los espacios donde se traten las tem\u00e1ticas relacionadas a la seguridad, la privacidad, la interoperabilidad/estandares, cuestiones legales, reglamentarias y de derechos, cuestiones relacionadas con las econom\u00edas emergentes y el desarrollo.</p>"},{"location":"02-IOT/01-IOT_fundamentals/iot_fundamentals/#introduccion","title":"Introducci\u00f3n","text":"<p>En esta realidad de conectividad creciente donde surgi\u00f3 la necesidad de definir un nuevo concepto para referirse a la interconexi\u00f3n digital de los objetos de nuestro entorno a trav\u00e9s de Internet. Este concepto fue bautizado por primera vez por Kevin Ashton (creador de est\u00e1ndares de tecnolog\u00edas tan utilizadas como RFID) como \u201cInternet de las Cosas\u201d o \u201cIoT\u201d (Internet of Things) en el a\u00f1o 1999. Esta conceptualizaci\u00f3n lo convirti\u00f3 en uno de los promotores de esta tecnolog\u00eda y abanderado en el fomento del uso del Internet de las Cosas en congresos y grandes multinacionales. Dar una definici\u00f3n de IoT no es algo sencillo. Desde un punto de vista tecnol\u00f3gico, The Global Standards Initiative on Internet of Things (IoT-GSI), de ITU, define IoT como:</p> <p>\u201cUna infraestructura global en el marco de la sociedad de la informaci\u00f3n que provee servicios a trav\u00e9s de la conexi\u00f3n de elementos f\u00edsicos o virtuales, basada en tecnolog\u00edas de la informaci\u00f3n y la comunicaci\u00f3n, tanto existentes como en desarrollo\u201d.</p> <p>IoT suele dividirse en varias capas de abstracci\u00f3n; la capa f\u00edsica o de percepci\u00f3n, en donde se hace referencia a sensores y actuadores, la capa de red, que consta de los protocolos y tipos de comunicaci\u00f3n y la infraestructura de red, la capa de servicios, y, finalmente, la capa de aplicaciones. IoT es por tanto un paradigma multidisciplinar que abarca desde la tecnolog\u00eda de fabricaci\u00f3n de semiconductores o dise\u00f1o y ensamblado de circuitos tanto micro como nanoelectr\u00f3nicos, hasta la provisi\u00f3n de servicios web. como as\u00ed tambi\u00e9n la definici\u00f3n de est\u00e1ndares, implicancias legales, seguridad entre otros. Los avances en nuevas interfaces de comunicaci\u00f3n, el uso de procesamientos de datos mas eficientes, la inteligencia artificial, permiten desplegar escenarios mas complejos e innovadores. Donde el uso de objetos inteligentes permite captura y controlar de forma aut\u00f3noma multitud de procesos, lo que unido a una comunicaci\u00f3n continua permite la ejecuci\u00f3n de actividades coordinadas. Hoy en d\u00eda es posible realizar tareas complejas como el control industrial, la gesti\u00f3n de una red el\u00e9ctrica descentralizada, el control de fabricaci\u00f3n, etc.</p> <p></p>"},{"location":"02-IOT/01-IOT_fundamentals/iot_fundamentals/#desafios-de-iot","title":"Desafios de IoT","text":"<ul> <li>SEGURIDAD: Por principio, los desarrolladores y usuarios de dispositivos y sistemas de la IoT tienen la obligaci\u00f3n colectiva de asegurar que no est\u00e9n exponiendo a los usuarios y la propia Internet a da\u00f1os potenciales. Por lo tanto, se necesitar\u00e1 un enfoque colaborativo para desarrollar soluciones eficaces y adecuadas ante los desaf\u00edos de seguridad de la IoT, soluciones que se adapten bien a la escala y complejidad de los problemas. </li> <li>PRIVACIDAD: Para aprovechar las oportunidades, se deber\u00e1n desarrollar estrategias para respetar las opciones de privacidad individuales considerando un amplio espectro de expectativas, sin dejar de fomentar la innovaci\u00f3n en nuevas tecnolog\u00edas y servicios.</li> <li>INTEROPERABILIDAD / EST\u00c1NDARES: Contar con est\u00e1ndares apropiados, modelos de referencia y mejores pr\u00e1cticas tambi\u00e9n ayudar\u00e1 a frenar la proliferaci\u00f3n de dispositivos que podr\u00edan alterar a Internet. El uso de est\u00e1ndares gen\u00e9ricos, abiertos y ampliamente disponibles (como el Protocolo de Internet) como componentes de los dispositivos y servicios de la IoT permitir\u00e1 mayores ventajas para los usuarios, m\u00e1s innovaci\u00f3n y m\u00e1s oportunidades econ\u00f3micas.</li> <li>LEGALES, REGLAMENTARIAS Y DE DERECHOS: El uso de dispositivos de la IoT amplifica los problemas legales que ya existen en torno a Internet. Muchas veces el ritmo con que cambia la tecnolog\u00eda de la IoT supera la capacidad de adaptaci\u00f3n de las estructuras pol\u00edticas, legales y reglamentarias asociadas. resultados discriminatorios para ciertos usuarios. Otros problemas legales relacionados con los dispositivos de la IoT incluyen el conflicto entre la vigilancia por parte de las agencias de seguridad y los derechos civiles, las pol\u00edticas de retenci\u00f3n y destrucci\u00f3n de datos, y la responsabilidad legal por los usos accidentales, las violaciones de la seguridad y los fallos en la privacidad. Los flujos de datos transfronterizos, que se producen cuando los dispositivos de la IoT recogen datos personales en una jurisdicci\u00f3n y, para su procesamiento, los transmiten a otra jurisdicci\u00f3n donde las leyes de protecci\u00f3n de datos son diferentes. Adem\u00e1s, los datos recogidos por los dispositivos de la IoT podr\u00edan ser mal utilizados. Por esto es fundamental la evoluci\u00f3n de las licencias, leyes y reglamentos sobre la IoT que propicien los derechos de los usuarios. </li> <li>ECONOM\u00cdAS EMERGENTES Y EL DESARROLLO: se deber\u00e1n abordar las singulares necesidades y desaf\u00edos de la implementaci\u00f3n en las regiones menos desarrolladas, entre ellos el grado de preparaci\u00f3n de la infraestructura, los incentivos para el mercado y la inversi\u00f3n, los requerimientos en cuanto a las habilidades t\u00e9cnicas y los recursos pol\u00edticos. </li> </ul> <p>Las relaciones entre los objetos, su entorno y las personas est\u00e1n cada vez m\u00e1s entrelazadas. Sin embargo, para que la IoT realice sus potenciales beneficios para las personas, la sociedad y la econom\u00eda, es necesario considerar y abordar los problemas y desaf\u00edos asociados con la IoT.</p>"},{"location":"02-IOT/01-IOT_fundamentals/iot_fundamentals/#principales-aplicaciones","title":"Principales aplicaciones","text":"<ul> <li>Industria 4.0: La maquinaria que se encarga de controlar los procesos de fabricaci\u00f3n, robots ensambladores, sensores de temperatura, control de producci\u00f3n, etc. Todo est\u00e1 conectado a Internet en cada vez m\u00e1s empresas, lo que permite crear sistemas ciberf\u00edsicos donde lo f\u00edsico y lo digital interact\u00faan en tiempo real. Inmersas en esta cuarta revoluci\u00f3n industrial, las tecnolog\u00edas IoT est\u00e1n cada vez m\u00e1s presentes, lo que se est\u00e1 empezando a conocer como IIoT (Industrial Internet of Things).</li> <li>Ciudades inteligentes: Actualmente, el 50% de la poblaci\u00f3n vive en las ciudades, llegando al 75% en Europa, por lo que se hacen necesarias soluciones que ayuden en la gesti\u00f3n de la vida diar\u00eda de la ciudad de una manera inteligente y sostenible: control de sem\u00e1foros, puentes, aparcamientos, v\u00edas de tren, iluminaci\u00f3n, c\u00e1maras urbanas, etc. Cada vez m\u00e1s ciudades implementan este tipo de infraestructuras basadas en IoT que permiten monitorizar el correcto funcionamiento de sus estructuras adem\u00e1s de adaptar m\u00e1s flexiblemente su funcionamiento ante nuevos eventos. </li> <li>Control ambiental: Una de las \u00e1reas en las que est\u00e1 teniendo m\u00e1s \u00e9xito IoT es el control ambiental, pues permite acceder desde pr\u00e1cticamente cualquier parte a informaci\u00f3n de sensores atmosf\u00e9ricos, meteorol\u00f3gicos y s\u00edsmicos.</li> <li>Sector salud (eHealth): Cada vez m\u00e1s cl\u00ednicas y hospitales alrededor del mundo conf\u00edan en sistemas que permiten al personal de salud monitorear activamente a los pacientes de manera ambulatoria y no invasiva.</li> <li>Inteligencia Artificial: El uso de la inteligencia artificial (IA) en medicina y salud est\u00e1 ganando impulso: el diagn\u00f3stico m\u00e9dico resulta m\u00e1s f\u00e1cil a trav\u00e9s de herramientas que permiten el reconocimiento de imagen y la visualizaci\u00f3n de los cambios en la apariencia del paciente. La IA tambi\u00e9n permitir\u00e1 explorar de forma segura las interacciones qu\u00edmicas y biol\u00f3gicas de diferentes f\u00e1rmacos que se encuentren en desarrollo. Otra ventaja es la optimizaci\u00f3n del flujo de trabajo, permitiendo automatizar tareas repetitivas que debe hacer el m\u00e9dico y que acostumbra a llevar horas de trabajo.</li> <li>Realidad Virtual y aumentada: El paciente podr\u00e1 emerger en un entorno creado de manera totalmente artificial a trav\u00e9s de unas gafas VR/AR, un recurso utilizado para diagnosticar enfermedades o, en algunos casos, durante procesos de rehabilitaci\u00f3n. Tambi\u00e9n, los cirujanos podr\u00e1n recurrir a la realidad virtual para visualizar reconstrucciones de \u00f3rganos en 3D y ensayar procedimientos que les permitir\u00e1n realizar operaciones m\u00e1s r\u00e1pidamente en situaciones reales y con un da\u00f1o m\u00ednimo en los tejidos.</li> <li>La red el\u00e9ctrica (smart grid):  Utiliza computadoras y las redes de comunicaci\u00f3n para dar un mejor seguimiento y control de la red el\u00e9ctrica.</li> <li>Big Data y an\u00e1lisis: Las nuevas soluciones integradas podr\u00e1n recopilar, interconectar, almacenar y analizar datos para que los profesional realicen un diagn\u00f3stico m\u00e1s preciso y r\u00e1pido.</li> <li>Agricultura/ganader\u00eda: Con sistemas de optimizaci\u00f3n de riego, que incluyen sensores para detectar la humedad del suelo, la temperatura ambiente y el pron\u00f3stico del tiempo. En cuanto a la ganader\u00eda, el uso de la identificaci\u00f3n por radiofrecuencia (RFID) del ganado, lo que facilita el conteo y, en algunos casos, la ubicaci\u00f3n de los animales.</li> <li>Seguimiento de activos e inventario: Los propietarios de valiosas piezas de equipo, tales como excavadoras, cargadores frontales, motoniveladoras y tractores, pueden estar al tanto de su ubicaci\u00f3n y su condici\u00f3n.</li> </ul>"},{"location":"02-IOT/01-IOT_fundamentals/iot_fundamentals/#conclusiones","title":"Conclusiones","text":"<p>Internet de las cosas promete abrir la puerta a un mundo revolucionario, m\u00e1s \u201cinteligente\u201d, totalmente interconectado, en el cual las relaciones entre los objetos, las personas y su entorno se entrelazan cada vez m\u00e1s. Esta omnipresencia de dispositivos conectados est\u00e1 dando lugar una nueva era para todo el mundo, transformando modelos econ\u00f3micos, procesos productivos, industrias y revolucionando aspectos de la vida diaria de cada individuo. Pero existen una serie de tem\u00e1ticas, que deben ser consideradas por los distintos actores involucrados, principalmente las mencionadas a lo largo del documento, seguridad, privacidad, interoperabilidad y est\u00e1ndares y las econom\u00edas emergentes. Por lo tanto Internet de las cosas implica un complejo conjunto de consideraciones tecnol\u00f3gicas, sociales y pol\u00edticas en constante evoluci\u00f3n. Para definir las formas m\u00e1s eficaces de avanzar, se necesitar\u00e1 la participaci\u00f3n informada, el di\u00e1logo y la colaboraci\u00f3n de una variedad de partes interesadas.</p>"},{"location":"02-IOT/01-IOT_fundamentals/iot_fundamentals/#referencias","title":"Referencias","text":"<ul> <li>Diplomatura IOT - UTN - https://www.internetsociety.org/wp-content/uploads/2017/09/report-InternetOfThings-20160817-es-1.pdf</li> <li>https://www.argentina.gob.ar/sites/default/files/paperbenchmarkinternacional-iot.pdf</li> <li>http://ecixgroup.com/el-grupo/una-aproximacion-algunos-elementos-de-internet-de-las- cosas/</li> <li>https://pdfs.semanticscholar.org/e4ce/63ff3e0120f63258e19c48b65feb4b3dd0a6.pdf</li> <li>Foundations of moderm networking, William Stallings</li> <li>https://jelvix.com/blog/iot-architecture-layers</li> </ul>"},{"location":"02-IOT/02-IOT_mqtt/iot_mqtt/","title":"MQTT (Message Queue Telemetry Transport)","text":"<p>Inicialmente, MQTT fue inventado y desarrollado por IBM a finales de los 90. Su aplicaci\u00f3n original era vincular sensores en oleoductos de petr\u00f3leo a sat\u00e9lites. Tal como sugiere su nombre, se trata de un protocolo de mensajer\u00eda con soporte para la comunicaci\u00f3n as\u00edncrona entre las partes. Un protocolo de sistema de mensajes as\u00edncrono separa al emisor y al receptor del mensaje tanto en el tiempo como en el espacio y, por lo tanto, es escalable en ambientes de red que no sean de confianza. Pese a su nombre, no tiene nada que ver con colas de mensajes; en realidad, utiliza un modelo de publicaci\u00f3n y suscripci\u00f3n. A final de 2014, se convirti\u00f3 oficialmente en un patr\u00f3n abierto OASIS, con soporte en los lenguajes de programaci\u00f3n populares, usando diversas implementaciones de software libre.</p>"},{"location":"02-IOT/02-IOT_mqtt/iot_mqtt/#caracteristicas","title":"Caracter\u00edsticas:","text":"<ul> <li>Protocolo de comunicaci\u00f3n asincr\u00f3nico.</li> <li>Baja cantidad de bist en los encabezados</li> <li>Modelo de Publish/Subscribe (PubSub model)</li> <li>Corre sobre protocolo orientado a la comunicaci\u00f3n (TCP)</li> </ul> <p>Los objetivos del protocolo MQTT es minimizar el ancho de banda, comunicaci\u00f3n bidireccional entre dispositivos, minimizar los requerimientos de los dispositivos tanto recursos como consumo y garantizar la fiabilidad y cierto grado de seguridad.</p> <p>Se puede utilizar cifrado SSL el cual a\u00f1ade una sobrecarga debido a un extra en la cantidad de datos, los microcontroladores que se selecciones deben poder implementar el protocolo SSL para garantizar cifrado de extremo a extremo.</p> <p></p>"},{"location":"02-IOT/02-IOT_mqtt/iot_mqtt/#estructura-de-un-mensaje-mqtt","title":"ESTRUCTURA DE UN MENSAJE MQTT","text":"<p>Lo m\u00e1s importante dentro del protocolo MQTT son los mensajes. Se env\u00edan de forma as\u00edncrona, es decir, no hay un reloj indicando una base de tiempo para sincronizar la llegada y salida de informaci\u00f3n y no hay que esperar respuesta una vez que se env\u00eda un mensaje.</p>"},{"location":"02-IOT/02-IOT_mqtt/iot_mqtt/#cada-mensaje-consta-de-3-partes","title":"Cada mensaje consta de 3 partes:","text":"<ul> <li>Encabezado fijo. Ocupa s\u00f3lo 2 bytes y es obligatorio enviar esta parte en todos los mensajes.</li> <li>Encabezado variable. Ocupa 4 bits y no es obligatorio que est\u00e9 en todos los mensajes.</li> <li>Mensaje o carga \u00fatil (payload). Puede tener un m\u00e1ximo de 256 Mb, aunque en implementaciones reales el m\u00e1ximo es de 2 a 4 kB.</li> </ul>"},{"location":"02-IOT/02-IOT_mqtt/iot_mqtt/#mqtt-server-broker","title":"MQTT SERVER - BROKER","text":"<p>Es quien corre los topics , recibe pedidos de suscripci\u00f3n de los clientes a los topics, recibe mensajes desde los clientes y redireccionan , basado en la subscripci\u00f3n de los clientes</p>"},{"location":"02-IOT/02-IOT_mqtt/iot_mqtt/#mqtt-client-publisher-subscriber","title":"MQTT CLIENT - PUBLISHER, SUBSCRIBER","text":"<p>Los clientes se subscriben a los topics, para publicar y recibir mensajes.</p>"},{"location":"02-IOT/02-IOT_mqtt/iot_mqtt/#sintaxis-de-los-topic","title":"SINTAXIS DE LOS TOPIC","text":"<p>El s\u00edmbolo / es un separador de niveles (jerarquias). Siempre se pone para separar cada uno de los niveles. Por ejemplo, podr\u00edamos tener algo como esto para medir la temperatura y/o humedad:</p> <p>/casa/comedor/temperatura /casa/comedor/humedad /casa/cocina/temperatura /casa/cocina/ humedad /casa/dormitorio/temperatura /casa/dormitorio/humedad</p> <p>Es un protocolo intuitivo desde la escritura. Existen comodines como el s\u00edmbolo + y #</p> <ul> <li>El s\u00edmbolo + se sustituye por cualquier nivel. Si por ejemplo nos queremos suscribir a todos los topic de temperatura podemos hacerlo de la siguiente manera:</li> </ul> <p>/casa/+/temperatura</p> <p>El s\u00edmbolo + se sustituir\u00e1 por cada nivel que tenga como nivel superior casa y como nivel inferior temperatura.</p> <p>El s\u00edmbolo # tambi\u00e9n es un comod\u00edn. Este s\u00edmbolo cubre los niveles que est\u00e9n por debajo.</p> <p>Por ejemplo, si quieres suscribirte a todos los mensajes que se env\u00edan a casa s\u00f3lo tienes que hacer lo siguiente:</p> <p>/casa/#</p> <p>El topic anterior nos enviar\u00e1 cualquier mensaje que se env\u00ede a casa o a cualquier nivel que est\u00e9 por debajo.</p> <p>Es recomendable utilizar topics, del formato anterior ya que nos permite escalabilidad.</p>"},{"location":"02-IOT/02-IOT_mqtt/iot_mqtt/#como-funciona-la-arquitectura-mqtt","title":"\u00bfC\u00d3MO FUNCIONA LA ARQUITECTURA MQTT?","text":"<p>Una de las caracter\u00edsticas m\u00e1s importantes es que los clientes o nodos no dependen unos de otros ya que no tienen conocimiento de qui\u00e9n est\u00e1 al otro lado. Puede incluso que no haya nadie en el otro extremo.</p> <p>Esto permite algo muy importante en proyectos de este tipo: la escalabilidad.</p> <p>Al contrario de lo que ocurre con el protocolo HTTP, no hay que hacer una petici\u00f3n para recibir informaci\u00f3n desde un cliente. Cada cliente MQTT abre una conexi\u00f3n permanente TCP con el broker.</p> <p>El Broker tiene la capacidad de hacer que los mensajes sean persistentes, guardando el mensaje hasta que se conecte el cliente al que va dirigido.</p> <p>El broker es el \u00fanico que sabe qui\u00e9n est\u00e1 suscrito a un topic.</p>"},{"location":"02-IOT/02-IOT_mqtt/iot_mqtt/#calidad-de-servicio-o-qos","title":"Calidad de servicio O QOS","text":"<p>La calidad de servicio en MQTT determina c\u00f3mo se entrega el mensaje a los receptores.</p> <p>El QoS se especifica en cada mensaje que se env\u00eda y puede haber 3 grados de calidad:</p> <ul> <li>QoS 0: como m\u00e1ximo una vez. Esto implica que puede que no se entregue.</li> <li>QoS 1: al menos una vez. Se garantiza la entrega, pero puede que duplicados.</li> <li>QoS 2: exactamente una vez. Se garantiza que llegar\u00e1 una vez el mensaje.</li> </ul> <p>Utilizar un grado de calidad u otro depender\u00e1 de la fiabilidad que queramos tener en nuestro sistema.</p>"},{"location":"02-IOT/02-IOT_mqtt/iot_mqtt/#ejemplo-mosquitto","title":"Ejemplo Mosquitto","text":"<pre><code>sudo apt install mosquitto mosquitto-clients\nmosquitto_pub -h localhost -t test -m \"{\\\"value1\\\":20,\\\"value2\\\":40}\"\nmosquitto_sub -h localhost -t test\n</code></pre>"},{"location":"02-IOT/02-IOT_mqtt/iot_mqtt/#referencias","title":"Referencias","text":"<ul> <li>https://mqtt.org/</li> <li>https://eclipse.dev/paho/</li> <li>https://mosquitto.org/</li> <li>https://www.hivemq.com/blog/mqtt-essentials-part-5-mqtt-topics-best-practices/</li> <li>https://mqttx.app/web</li> <li>https://github.com/emqx/MQTT-Client-Examples/tree/master/mqtt-client-Python3</li> </ul>"},{"location":"02-IOT/03-nodered/nodered/","title":"Node-RED","text":""},{"location":"02-IOT/03-nodered/nodered/#introduccion","title":"Introducci\u00f3n:","text":"<p>Node-RED es una herramienta de c\u00f3digo abierto que simplifica el desarrollo de aplicaciones para el Internet de las Cosas (IoT) y la integraci\u00f3n de sistemas. Con una interfaz visual intuitiva y basada en flujos, Node-RED permite a desarrolladores y entusiastas de IoT conectar dispositivos y servicios de manera r\u00e1pida y sencilla, sin necesidad de conocimientos profundos en programaci\u00f3n.</p>"},{"location":"02-IOT/03-nodered/nodered/#que-es-node-red","title":"\u00bfQu\u00e9 es Node-RED?","text":"<p>Node-RED es una plataforma de programaci\u00f3n visual basada en JavaScript, construida sobre Node.js, que facilita la creaci\u00f3n de flujos de trabajo (flows) mediante la interconexi\u00f3n de nodos predefinidos. Estos nodos representan diversas funciones y servicios, desde entradas y salidas de dispositivos IoT hasta servicios web y bases de datos.</p> <p></p> <p></p>"},{"location":"02-IOT/03-nodered/nodered/#caracteristicas-principales","title":"Caracter\u00edsticas Principales:","text":"<p>Interfaz Gr\u00e1fica Intuitiva: Node-RED ofrece una interfaz de usuario basada en un navegador web que permite arrastrar y soltar nodos para crear y conectar flujos de manera visual. Amplia Gama de Nodos Integrados: La comunidad de Node-RED ha desarrollado y compartido una gran variedad de nodos predefinidos para interactuar con dispositivos, servicios en la nube, bases de datos y m\u00e1s. Extensibilidad y Flexibilidad: Node-RED es altamente extensible, permitiendo a los usuarios crear y compartir sus propios nodos y contribuir al ecosistema de la comunidad. Integraci\u00f3n con Plataformas IoT y APIs: Node-RED facilita la integraci\u00f3n con una amplia gama de plataformas y servicios IoT, as\u00ed como con APIs de terceros, lo que la convierte en una herramienta poderosa para la automatizaci\u00f3n y la interoperabilidad. Casos de Uso:</p> <ul> <li>Automatizaci\u00f3n del Hogar: Node-RED puede utilizarse para crear flujos que controlen dispositivos dom\u00e9sticos inteligentes, como luces, termostatos y c\u00e1maras de seguridad.</li> <li>Monitorizaci\u00f3n y Control Industrial: En entornos industriales, Node-RED puede implementarse para supervisar y controlar procesos de fabricaci\u00f3n, recopilar datos de sensores y enviar alertas en caso de anomal\u00edas.</li> <li>Integraci\u00f3n de Servicios en la Nube: Node-RED facilita la integraci\u00f3n de servicios en la nube, como AWS, Azure y Google Cloud Platform, permitiendo la creaci\u00f3n de flujos complejos que aprovechan funcionalidades de almacenamiento, an\u00e1lisis y procesamiento en la nube.</li> </ul>"},{"location":"02-IOT/03-nodered/nodered/#conclusion","title":"Conclusi\u00f3n:","text":"<p>Node-RED es una herramienta poderosa y accesible que simplifica el desarrollo de aplicaciones IoT y la integraci\u00f3n de sistemas. Con su enfoque visual y su amplia comunidad de usuarios y desarrolladores, Node-RED se ha convertido en una opci\u00f3n popular para proyectos IoT de todos los tama\u00f1os y complejidades.</p>"},{"location":"02-IOT/03-nodered/nodered/#referencias","title":"Referencias","text":"<p>https://nodered.org/</p>"},{"location":"02-IOT/04-Actividad-Integradora_IOT/actividad_IOT/","title":"Sistema de Monitoreo de IoT con MQTT, Node-RED, InfluxDB, Grafana y Home Assistant.","text":""},{"location":"02-IOT/04-Actividad-Integradora_IOT/actividad_IOT/#resumen","title":"Resumen","text":"<p>El proyecto tiene como objetivo desarrollar un sistema completo de monitoreo de IoT que capture y almacene los datos de temperatura y uso de CPU de servidores, y proporcione visualizaciones en tiempo real y automatizaci\u00f3n a trav\u00e9s de diferentes componentes. Se utilizar\u00e1n tecnolog\u00edas como MQTT, Node-RED del lado del servidor y python y bash del lado de los clientes.</p> <p>Objetivo general: Implementar un sistema integral de monitoreo de IoT que permita capturar, almacenar y visualizar los datos de temperatura y uso de CPU de servidores,</p>"},{"location":"02-IOT/04-Actividad-Integradora_IOT/actividad_IOT/#milestone-1-despliegue-de-node-red-y-emqx-como-servicios","title":"Milestone 1: Despliegue de Node-RED y EMQX como servicios","text":"<ol> <li>Configurar el entorno de Docker y Docker Compose.</li> <li>Crear un archivo <code>docker-compose.yml</code> para definir los servicios de Node-RED y EMQX.</li> <li>Configurar el servicio de Node-RED en Docker Compose, especificando los vol\u00famenes, puertos y dependencias necesarios.</li> <li>Configurar el servicio de EMQX en Docker Compose, especificando los vol\u00famenes, puertos y configuraciones necesarias.</li> <li>Ejecutar <code>docker-compose up</code> para desplegar los contenedores de Node-RED y EMQX.</li> </ol>"},{"location":"02-IOT/04-Actividad-Integradora_IOT/actividad_IOT/#milestone-2-aprovisionamiento-de-configuraciones","title":"Milestone 2: Aprovisionamiento de configuraciones","text":"<ol> <li>Configurar las credenciales y configuraciones espec\u00edficas de Node-RED, como la configuraci\u00f3n de conexi\u00f3n a EMQX y otros nodos necesarios.</li> <li>Aprovisionar los archivos de configuraci\u00f3n necesarios para EMQX, como los archivos de configuraci\u00f3n general, autenticaci\u00f3n y t\u00f3picos MQTT.</li> <li>Reiniciar los contenedores de Node-RED y EMQX para aplicar las nuevas configuraciones.</li> </ol>"},{"location":"02-IOT/04-Actividad-Integradora_IOT/actividad_IOT/#milestone-3-creacion-del-cliente-bash","title":"Milestone 3: Creaci\u00f3n del cliente Bash","text":"<ol> <li>Crear un archivo Bash que utilice el comando <code>lm-sensors</code> para obtener la informaci\u00f3n de temperatura y uso de CPU.</li> <li>Configurar el cliente Bash para publicar los datos obtenidos en un t\u00f3pico MQTT espec\u00edfico en el broker EMQX.</li> </ol>"},{"location":"02-IOT/04-Actividad-Integradora_IOT/actividad_IOT/#milestone-4-creacion-del-cliente-python","title":"Milestone 4: Creaci\u00f3n del cliente Python","text":"<ol> <li>Crear un script en Python que utilice la librer\u00eda Paho para conectarse al broker EMQX.</li> <li>Implementar la l\u00f3gica necesaria para obtener la informaci\u00f3n de temperatura y uso de CPU utilizando <code>lm-sensors</code>.</li> <li>Configurar el cliente Python para publicar los datos obtenidos en un t\u00f3pico MQTT espec\u00edfico en el broker EMQX.</li> </ol> <p>Cada milestone representa un hito importante en el proceso de despliegue y configuraci\u00f3n. Al completar estos milestones, habr\u00e1s desplegado Node-RED y EMQX como servicios, aprovisionado sus configuraciones y creado los clientes Bash y Python para enviar la informaci\u00f3n de lm-sensors al broker MQTT.</p>"},{"location":"03-Proyecto_Final/proyecto_final/","title":"Proyecto Final Aplicaiciones TCP IP 2024 -  \"Despliegue de una Plataforma IoT para la Gesti\u00f3n y Visualizaci\u00f3n de Datos de Series Temporales\"","text":""},{"location":"03-Proyecto_Final/proyecto_final/#resumen","title":"Resumen","text":"<p>Este proyecto se centra en el desarrollo de la plataforma del lado del servidor para la gesti\u00f3n y visualizaci\u00f3n de datos de series temporales en entornos IoT. La implementaci\u00f3n de referencia proporcionar\u00e1 una base s\u00f3lida para la expansi\u00f3n futura de la plataforma hacia proyectos m\u00e1s espec\u00edficos en ambientes productivos. Se enfocar\u00e1 en la captura, almacenamiento y presentaci\u00f3n eficientes de datos clave, como temperatura, humedad, corriente y tensi\u00f3n, utilizando tecnolog\u00edas espec\u00edficas para garantizar su funcionamiento \u00f3ptimo en tiempo real. Este enfoque permitir\u00e1 construir sobre una base s\u00f3lida y escalable, facilitando la adaptaci\u00f3n a diferentes casos de uso y requisitos en el futuro.</p>"},{"location":"03-Proyecto_Final/proyecto_final/#introduccion","title":"Introducci\u00f3n","text":"<p>El desarrollo de este prototipo tiene como objetivo validar la viabilidad t\u00e9cnica y funcional de una soluci\u00f3n IoT para la gesti\u00f3n de datos de series temporales. Se busca capturar datos relevantes de sensores y dispositivos, almacenarlos de manera eficiente en una base de datos de series temporales y visualizarlos en tiempo real mediante paneles interactivos. El prototipo servir\u00e1 como experiencia inicial para futuras implementaciones en entornos reales.</p>"},{"location":"03-Proyecto_Final/proyecto_final/#fases-del-proyecto","title":"Fases del Proyecto:","text":""},{"location":"03-Proyecto_Final/proyecto_final/#requerimientos","title":"Requerimientos","text":"<p>En esta fase se identifican y documentan los requerimientos del prototipo. Se establecen los siguientes requerimientos:</p> <ul> <li>Captura de datos de temperatura, humedad, corriente y tensi\u00f3n.</li> <li>Almacenamiento eficiente de datos en una base de datos de series temporales.</li> <li>Visualizaci\u00f3n en tiempo real de datos mediante dashboards interactivos.</li> <li>Seguridad en la comunicaci\u00f3n MQTT entre dispositivos y la plataforma.</li> </ul>"},{"location":"03-Proyecto_Final/proyecto_final/#diseno","title":"Dise\u00f1o","text":"<p>En esta fase se especifica la arquitectura de la soluci\u00f3n y se dise\u00f1an los paneles de visualizaci\u00f3n. Aspectos clave del dise\u00f1o incluyen:</p> <ul> <li>Arquitectura de comunicaci\u00f3n entre dispositivos y plataforma.</li> <li>Especificaci\u00f3n de la base de datos InfluxDB y el broker MQTT EMQX.</li> <li>Dise\u00f1o de los dashboards interactivos en Grafana y Streamlit.</li> <li>Planificaci\u00f3n de la seguridad en la comunicaci\u00f3n MQTT.</li> </ul>"},{"location":"03-Proyecto_Final/proyecto_final/#implementacion-o-desarrollo","title":"Implementaci\u00f3n o Desarrollo","text":"<p>Durante esta fase se lleva a cabo la implementaci\u00f3n del prototipo seg\u00fan el dise\u00f1o establecido. Se realizan las siguientes tareas:</p> <ul> <li>Configuraci\u00f3n del broker MQTT EMQX y la base de datos InfluxDB.</li> <li>Desarrollo de scripts en Python y MicroPython para la captura y env\u00edo de datos.</li> <li>Integraci\u00f3n de Telegraf para la recolecci\u00f3n y almacenamiento de datos en InfluxDB.</li> <li>Creaci\u00f3n de los dashboards interactivos en Streamlit y Grafana.</li> </ul>"},{"location":"03-Proyecto_Final/proyecto_final/#pruebas-o-ensayos","title":"Pruebas o Ensayos","text":"<p>Se realizan pruebas exhaustivas para validar el funcionamiento del prototipo. Se llevan a cabo las siguientes actividades:</p> <ul> <li>Pruebas de integraci\u00f3n entre los componentes del sistema.</li> <li>Verificaci\u00f3n de la captura y almacenamiento correcto de datos.</li> <li>Validaci\u00f3n de la visualizaci\u00f3n de datos en los dashboards.</li> <li>Evaluaci\u00f3n de la seguridad en la comunicaci\u00f3n MQTT.</li> </ul>"},{"location":"03-Proyecto_Final/proyecto_final/#mantenimiento","title":"Mantenimiento","text":"<p>La fase de mantenimiento asegura el funcionamiento \u00f3ptimo del prototipo a lo largo del tiempo. Se incluyen las siguientes acciones:</p> <ul> <li>Implementaci\u00f3n de m\u00e9tricas de monitoreo para detectar posibles fallos.</li> <li>Monitoreo continuo del rendimiento y la disponibilidad de los servicios.</li> <li>Actualizaci\u00f3n y mejora de los componentes del prototipo seg\u00fan sea necesario.</li> </ul>"},{"location":"03-Proyecto_Final/proyecto_final/#consideracines","title":"Consideracines","text":"<p>El proyecto se realizar\u00e1 utilizando contenedores, lo que permitir\u00e1 una f\u00e1cil portabilidad y escalabilidad del entorno de desarrollo. Se implementar\u00e1 el despliegue del stack con Docker Compose para simplificar el proceso de configuraci\u00f3n y gesti\u00f3n de los servicios. Adem\u00e1s, toda la documentaci\u00f3n del proyecto se realizar\u00e1 en formato Markdown (Markdown Documentation), proporcionando una forma clara y concisa de documentar el proceso de desarrollo y facilitando la colaboraci\u00f3n entre los miembros del equipo.</p>"},{"location":"03-Proyecto_Final/proyecto_final/#referencia-de-estructura-del-repositorio","title":"Referencia de estructura del repositorio","text":"<pre><code>proyecto/\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 file.md\n\u2502   \u251c\u2500\u2500 file2.md\n\u2502   \u2514\u2500\u2500 folder/\n\u2502       \u251c\u2500\u2500 file.md\n\u2502       \u2514\u2500\u2500 file2.md\n\u251c\u2500\u2500 server/\n\u2502   \u251c\u2500\u2500 README.md\n\u2502   \u251c\u2500\u2500 docker-compose.yml\n\u2502   \u251c\u2500\u2500 influxdb/\n\u2502   \u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u2502   \u2514\u2500\u2500 influxdb.conf\n\u2502   \u251c\u2500\u2500 emqx/\n\u2502   \u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u2502   \u2514\u2500\u2500 emqx.conf\n\u2502   \u251c\u2500\u2500 telegraf/\n\u2502   \u2502   \u251c\u2500\u2500 telegraf.conf\n\u2502   \u2502   \u2514\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 grafana/\n\u2502   \u2502   \u251c\u2500\u2500 grafana.conf\n\u2502   \u2502   \u2514\u2500\u2500 Dockerfile\n\u2502   \u2514\u2500\u2500 streamlitapp/\n\u2502       \u251c\u2500\u2500 data_capture.py\n\u2502       \u2514\u2500\u2500 data_processing.py\n\u251c\u2500\u2500 clients/\n\u2502   \u251c\u2500\u2500 client1/\n\u2502   \u2502   \u251c\u2500\u2500 README.md\n\u2502   \u2502   \u2514\u2500\u2500 src/\n\u2502   \u2502       \u251c\u2500\u2500 main.py\n\u2502   \u2502       \u2514\u2500\u2500 utils.py\n\u2502   \u2514\u2500\u2500 client2/\n\u2502       \u251c\u2500\u2500 README.md\n\u2502       \u2514\u2500\u2500 src/\n\u2502           \u251c\u2500\u2500 main.py\n\u2502           \u2514\u2500\u2500 utils.py\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 LICENSE\n\u2514\u2500\u2500 README.md\n</code></pre>"}]}